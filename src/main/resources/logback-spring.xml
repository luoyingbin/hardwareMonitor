<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <!-- 忽略session超时输出 -->
    <logger name="org.apache.catalina.session.ManagerBase">
        <level value="INFO" />
    </logger>

    <appender name="consoleApp" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %-15magenta(${PID:- }) --- [%20thread]
                %-75cyan(%logger{58}): %method:%L >>> %msg%n
            </pattern>
        </layout>
    </appender>

    <appender name="fileInfoApp" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-15(${PID})[%20thread] %-75(%logger{58}): %method:%L: %msg%n
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
        <!-- 滚动策略 -->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 路径 &ndash;&gt;-->
<!--            <fileNamePattern>log/com.info.%d.log</fileNamePattern>-->
<!--            <maxHistory>30</maxHistory>-->
<!--            <totalSizeCap>2GB</totalSizeCap>-->
<!--            <cleanHistoryOnStart>true</cleanHistoryOnStart>-->
<!--        </rollingPolicy>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>log/root-info-%d{yyyy-MM-dd}-%i.log.zip</FileNamePattern>
            <MaxHistory>30</MaxHistory>
            <maxFileSize>50MB</maxFileSize>
            <totalSizeCap>2GB</totalSizeCap>
        </rollingPolicy>
<!--        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
<!--            &lt;!&ndash; 文件大小触发重写新文件 没重写 &ndash;&gt;-->
<!--            <MaxFileSize>50MB</MaxFileSize>-->
<!--        </triggeringPolicy>-->
    </appender>

    <appender name="fileErrorApp" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤设置 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %-15(${PID})[%20thread] %-75(%logger{58}): %method:%L: %msg%n
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
        <!-- 设置滚动策略 -->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 路径 &ndash;&gt;-->
<!--            <fileNamePattern>log/com.err.%d.log</fileNamePattern>-->
<!--            &lt;!&ndash; 控制保留的归档文件的最大数量，超出数量就删除旧文件，假设设置每个月滚动，-->
<!--            且<maxHistory> 是1，则只保存最近1个月的文件，删除之前的旧文件 &ndash;&gt;-->
<!--            &lt;!&ndash;<MaxHistory>1</MaxHistory>&ndash;&gt;-->
<!--            <maxHistory>30</maxHistory>-->
<!--            <totalSizeCap>2GB</totalSizeCap>-->
<!--            <cleanHistoryOnStart>true</cleanHistoryOnStart>-->
<!--        </rollingPolicy>-->
<!--        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
<!--            &lt;!&ndash; 文件大小触发重写新文件 &ndash;&gt;-->
<!--            <MaxFileSize>50MB</MaxFileSize>-->
<!--        </triggeringPolicy>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>log/root-err-%d{yyyy-MM-dd}-%i.log.zip</FileNamePattern>
            <MaxHistory>30</MaxHistory>
            <maxFileSize>50MB</maxFileSize>
            <totalSizeCap>2GB</totalSizeCap>
        </rollingPolicy>
    </appender>
    <!-- TRACE < DEBUG < INFO < WARN < ERROR < FATAL -->
    <root level="DEBUG">
        <appender-ref ref="consoleApp"/>
        <appender-ref ref="fileInfoApp"/>
        <appender-ref ref="fileErrorApp"/>
    </root>
</configuration>